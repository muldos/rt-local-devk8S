# An example of installing Artifactory and Xray only (disabling the rest)
# Not a production configuration !! The purpose is to highlight the usage of the main configuration blocks related 
# to use a S3 bucket as filestore, and the external database configuration

### Uninstall
# helm uninstall jfp
# kubectl get pvc ...
# kubectl delete pvc ...
global:
  # Generate a random join key with 'openssl rand -hex 32'
  joinKey: 9a2ab2c7878dd7cac64d885adcea4a25d0da1987ebf2243b56d2ca68b6b077ce
  # Generate a random master key with 'openssl rand -hex 32'
  masterKey: 2356befde80f8e6c8cb327fc62d223a3b4efbcc967be77e87f4d47c7407fc44e
  database:
    initDBCreation: false
    host: "host.docker.internal"
    port: 5432
    sslMode: disable  
postgresql:
  enabled: false
artifactory:
  enabled: true
  nginx:
    enabled: false
  ingress:
    enabled: true
    defaultBackend:
      enabled: true
    hosts: 
      - jfrog.localdev.me
    routerPath: /
    artifactoryPath: /artifactory/
    className: ""
    annotations: 
      kubernetes.io/ingress.class: "nginx"
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      #nginx.ingress.kubernetes.io/rewrite-target: "/"
      #nginx.ingress.kubernetes.io/configuration-snippet: |
      #  rewrite ^/(v2)/token /artifactory/api/docker/null/v2/token;
      #  rewrite ^/(v2)/([^\/]*)/(.*) /artifactory/api/docker/$2/$1/$3;  
  mc:
    enabled: true
  jfconnect:
    enabled: true
    # proxy and version below 7.77.3 ? 
    # see : https://jfrog.com/help/r/jfrog-installation-setup-documentation/configure-jfconnect-proxy-for-helm-installation
  postgresql:
    enabled: false
    waitForDatabase: false    
  database:
    type: postgresql
    driver: org.postgresql.Driver
    user: "jfrog"
    password: "jfrog"
  artifactory:
    replicaCount: 1 
    persistence:
      # could also have been aws-s3-v3
      type: s3-storage-v3-direct
      awsS3V3: 
        testConnection: true
        # AKA AWS KEY ID
        identity: "minioadmin"
        # AKA AWS SECRET ACCESS KEY
        credential: "minioadmin"
        region: us-east-1
        bucketName: rt-filestore
        path: artifactory/filestore
        maxConnections: 50
        endpoint: "host.docker.internal"
        # here we want host.docker.internal/rt-filestore and not a virtual host rt-filestore.host.docker.internal
        enablePathStyleAccess: true
        port: 9090
        useHttp: true
        useInstanceCredentials: false
  # Run every Artifactory service to its own container
  splitServicesToContainers: true
xray:
  enabled: true
  #required block for JAS
  serviceAccount:
    create: true
  rbac:
    create: true  
  database:
    url: 'postgres://host.docker.internal:5432/xray?sslmode=disable'
    user: jfrog
    password: jfrog
# If enabling Xray, rabbitmq should also be enabled
rabbitmq:
  enabled: true
distribution:
  enabled: false
  database:
    url: 'jdbc:postgresql://host.docker.internal:5432/distribution?sslmode=disable'
    user: jfrog
    password: jfrog
catalog:
  enabled: true
  database:
    url: postgres://host.docker.internal:5432/catalogdb?sslmode=disable
    user: jfrog
    password: jfrog
#worker:
#  enabled: true
  